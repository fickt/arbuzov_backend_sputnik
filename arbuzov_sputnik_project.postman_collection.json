{
	"info": {
		"_postman_id": "9e7f05e2-82e2-46c5-8d99-f45b07206eb0",
		"name": "arbuzov_sputnik_project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21371483"
	},
	"item": [
		{
			"name": "Register user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "random0234lemail@gmail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "randomPassword",
							"type": "text"
						},
						{
							"key": "password_confirmation",
							"value": "randomPassword",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"if(jsonData.data.access_token) {\r",
							"    pm.collectionVariables.set(\"token\", jsonData.data.access_token)\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "email",
							"value": "user1super@gmail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "password",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/auth/login",
					"host": [
						"{{host}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit user with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \r\n         \"nickname\": \"ArbuzovMichael123456788909182151135142\",\r\n        \"first_name\": \"Michael\",\r\n        \"last_name\": \"Arbuzov\"\r\n   \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/users/2",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all resorts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/resorts",
					"host": [
						"{{host}}"
					],
					"path": [
						"resorts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add photo to user with id 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"ID equals 2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.user_id).to.eql(2);\r",
							"});\r",
							"\r",
							"pm.test(\"ID equals 2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.photo).to.eql(\"random/photo/path\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "photo",
							"value": "random/photo/path",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/user-photos",
					"host": [
						"{{host}}"
					],
					"path": [
						"user-photos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add resort to wishlist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "resort_id",
							"value": "2",
							"type": "text"
						},
						{
							"key": "visit_date",
							"value": "2023-07-21 14:31:38",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{host}}/user-wishlist-resorts",
					"host": [
						"{{host}}"
					],
					"path": [
						"user-wishlist-resorts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Try edit another user and get 401 unauthorized",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401 or 500\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([401,500]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \r\n         \"nickname\": \"ArbuzovMichael12323fkfgk\",\r\n        \"first_name\": \"Michael\",\r\n        \"last_name\": \"Arbuzov\"\r\n   \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/users/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"users",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://127.0.0.1:8000/api"
		},
		{
			"key": "token",
			"value": "token",
			"type": "string"
		}
	]
}